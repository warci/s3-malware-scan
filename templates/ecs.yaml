Parameters:
  AppName:
    Type: String
  
  EnvironmentName:
    Type: String
  
  EnvironmentId:
    Type: String

  VpcStackName:
    Type: String

  SqsStackName:
    Type: String

  SnsStackName:
    Type: String

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/ecs/${EnvironmentName}-${EnvironmentId}/${AppName}"
      RetentionInDays: 3

  ECSTaskManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "s3:*"
            Effect: "Allow"
            Resource: "*"
          - Action:
              - "logs:*"
            Effect: "Allow"
            Resource: "*"
          - Action:
              - "sqs:*"
            Effect: "Allow"
            Resource: "*"
          - Action:
              - "sns:*"
            Effect: "Allow"
            Resource: "*"
          - Action:
              - "kms:*"
            Effect: "Allow"
            Resource: "*"
          - Action:
              - cloudwatch:PutMetricData
            Effect: "Allow"
            Resource: "*"
          - Action:
              - "ecs:GetTaskProtection"
              - "ecs:PutTaskProtection"
              - "ecs:UpdateTaskProtection"
            Effect: "Allow"
            Resource: "*"

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRole"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Effect: "Allow"
      ManagedPolicyArns:
        - !Ref ECSTaskManagedPolicy

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref AppName
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 2
        - CapacityProvider: FARGATE_SPOT
          Weight: 1

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      NetworkMode: awsvpc
      Memory: "2048"
      Cpu: "512"
      EphemeralStorage:
        SizeInGiB: 50
      ExecutionRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole
      ContainerDefinitions:
        - Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}:latest
          Name: !Ref AppName
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AppName

          Environment:
          - Name: VIRUS_SCAN_QUEUE_URL
            Value:
              Fn::ImportValue: !Sub "${SqsStackName}-queue-url"
          - Name: VIRUS_SCAN_QUEUE_NAME
            Value: !Sub ${AppName}-${EnvironmentName}-${EnvironmentId}
          - Name: QUARANTINE_BUCKET
            Value: !Sub "${AWS::AccountId}-${AppName}-quarantine-${EnvironmentName}-${EnvironmentId}"
          - Name: CLEAN_BUCKET
            Value: !Sub "${AWS::AccountId}-${AppName}-clean-${EnvironmentName}-${EnvironmentId}"
          - Name: SNS_TOPIC_ARN
            Value:
              Fn::ImportValue: !Sub "${SnsStackName}-sns-topic-arn"
          - Name: DEBUG
            Value: "0"
          - Name: ENVIRONMENT_NAME
            Value: !Ref EnvironmentName
          - Name: ENVIRONMENT_ID
            Value: !Ref EnvironmentId          
      
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${AppName}-service
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 0
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - Fn::ImportValue: !Sub "${VpcStackName}-subnet-private-a"
            - Fn::ImportValue: !Sub "${VpcStackName}-subnet-private-b"
          SecurityGroups:
            - Fn::ImportValue: !Sub "${VpcStackName}-securitygroup-no-ingress"

Outputs:
  ECSClusterName:
    Description: ECS cluster name
    Value: !Ref ECSCluster
    Export:
      Name: !Sub "${AWS::StackName}-ecs-cluster-name"

  ECSServiceName:
    Description: ECS service name
    Value: !GetAtt ECSService.Name
    Export:
      Name: !Sub "${AWS::StackName}-ecs-service-name"