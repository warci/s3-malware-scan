Parameters:
  AppName:
    Type: String
  
  S3StackName:
    Type: String

Resources:
  CodeBuildManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "s3:*"
            Effect: "Allow"
            Resource: "*"
          - Action:
              - "logs:*"
            Effect: Allow
            Resource: "*"
          - Action:
              - "ecr:*"
            Effect: "Allow"
            Resource: "*"
          - Action:
              - "ecs:UpdateService"
            Effect: "Allow"
            Resource: "*"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRole"
            Principal:
              Service: "codebuild.amazonaws.com"
            Effect: "Allow"
      ManagedPolicyArns:
        - !Ref CodeBuildManagedPolicy

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AppName  
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref AppName
          - Name: IMAGE_TAG
            Value: latest
          - Name: APP_NAME
            Value: !Ref AppName
        PrivilegedMode: true
      Source:
        Type: S3
        Location:
          !Join
            - "/"
            - - Fn::ImportValue: !Sub "${S3StackName}-s3-install-bucket-name"
              - docker.zip

  TriggerBuildEventsRule: 
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "trigger-build-${AppName}"
      Description: "Events Rule to trigger Codebuild"
      ScheduleExpression: "cron(0 23 * * ? *)"
      State: "ENABLED"
      Targets: 
        - Arn: !GetAtt CodeBuildProject.Arn
          Id: !Sub "target-${AppName}"
          RoleArn: !GetAtt EventsRole.Arn

  TriggerBuildFromS3:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - 'Object Created'
        detail:
          bucket:
            name:
              - Fn::ImportValue: !Sub "${S3StackName}-s3-install-bucket-name"
      Targets: 
        - Arn: !GetAtt CodeBuildProject.Arn
          Id: !Sub "target-${AppName}"
          RoleArn: !GetAtt EventsRole.Arn

  BuildFailedEventsRule: 
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "build-failed-${AppName}"
      Description: "Events Rule to send notification on failed build"
      State: "ENABLED"
      EventPattern:
        Source:
          - aws.codebuild
        Detail:
          Build-status:
            - FAILED
            - STOPPED
          Project-name:
            - !Ref CodeBuildProject

  EventsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: events-codebuild
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource: !GetAtt CodeBuildProject.Arn