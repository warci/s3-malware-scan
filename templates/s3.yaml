Parameters:
  AppName:
    Type: String
  
  EnvironmentName:
    Type: String
  
  EnvironmentId:
    Type: String

Resources:
  InstallS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AppName}-install-${EnvironmentName}-${EnvironmentId}"
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  IncomingS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AppName}-incoming-${EnvironmentName}-${EnvironmentId}"
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  QuarantineS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AppName}-quarantine-${EnvironmentName}-${EnvironmentId}"

  CleanS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AppName}-clean-${EnvironmentName}-${EnvironmentId}"

Outputs:
  S3InstallBucket:
    Description: S3 bucket containing installation files
    Value: !Ref InstallS3Bucket
    Export:
      Name: !Sub "${AWS::StackName}-s3-install-bucket-name"

  S3InstallBucketArn:
    Description: ARN of the S3 bucket containing installation files
    Value: !GetAtt InstallS3Bucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-s3-install-bucket-arn"

  S3IncomingBucketName:
    Description: S3 bucket containing incoming files
    Value: !Ref IncomingS3Bucket
    Export:
      Name: !Sub "${AWS::StackName}-s3-incoming-bucket-name"

  S3QuarantineBucket:
    Description: S3 bucket containing quarantined files
    Value: !Ref QuarantineS3Bucket
    Export:
      Name: !Sub "${AWS::StackName}-s3-quarantine-bucket-name"

  S3CleanBucket:
    Description: S3 bucket containing clean files
    Value: !Ref CleanS3Bucket
    Export:
      Name: !Sub "${AWS::StackName}-s3-clean-bucket-name"